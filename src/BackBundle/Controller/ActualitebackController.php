<?php
/**
 * Created by PhpStorm.
 * User: ASUS
 * Date: 08/04/2019
 * Time: 18:08
 */

namespace BackBundle\Controller;


use AppBundle\Entity\Actualite;
use AppBundle\Entity\Category;
use AppBundle\Entity\notif;
use AppBundle\Form\ActualiteType;
use AppBundle\Form\CategoryType;
use Symfony\Component\HttpFoundation\Response;

use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\File\Exception\FileException;
use Symfony\Component\HttpFoundation\Request;


class ActualitebackController extends Controller
{
    public function ajouteractAction(Request $request)
    {
               if( $this->container->get( 'security.authorization_checker' )->isGranted( 'IS_AUTHENTICATED_FULLY' ) ) {
            $user = $this->container->get('security.token_storage')->getToken()->getUser();
        }
        else{
            return $this->redirectToRoute('fos_user_security_login');
        }

        $actualitee=new Actualite();

        $actualitee ->setUser($user);
        $actualitee ->setDate(new \DateTime('now'));
        $actualitee->setArchivestatut(1);
        $form=$this->createForm(ActualiteType::class,$actualitee);
        $form=$form->handleRequest($request);
        if($form->isValid() && $form->isSubmitted())
        {
            /*  $file = $form->get('pictures')->getData();
               // Generate a unique name for the file before saving it
               $fileName = $this-> generateUniqueFileName().'.'.$file->getExtension();


               // Move the file to the directory where brochures are stored
               $path = "http://127.0.0.1/" ;
               $file->move($this->getParameter('images_directory'), $fileName);
               $actualitee->setPictures($path.$fileName);  */
            $em = $this->getDoctrine()->getManager();

            $file = $actualitee->getPictures();
            $filename= md5(uniqid()) . '.' . $file->guessExtension();
            $file->move($this->getParameter('photos_directory'), $filename);
            $actualitee->setPictures($filename);


            //$em=$this->getDoctrine()->getManager();
            //base de donner
            $em->persist($actualitee);
            $em->flush();



            return $this->redirectToRoute('afficheradminactualite');

        }

        return $this->render('@Back/Actualite/ajoutActualite.html.twig', array(
            'form'=>$form->createView()



        ));


    }
    /*public function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    } */
    public function ajoutercategAction(Request $request){

        $categorie= new Category();

        $form =$this->createForm(CategoryType::class,$categorie);
        $form->handleRequest($request);
        //affichage des Cateegorie dans la mm page
        $emaff= $this ->getDoctrine()->getManager();
        $Categorieaff= $emaff ->getRepository('AppBundle:Category')->findAll();
        if($form->isSubmitted()&& $form->isValid()){
           // echo 'suite au clic sur le submit';
            $em = $this->getDoctrine()->getManager();
            $em->persist($categorie);
            $em->flush();
            return $this->redirectToRoute('ajoutercategorie');
        }
        return $this->render('@Back/Actualite/ajoutCateg.html.twig',array(
            "Form"=>$form->createView(),
            "Category" => $Categorieaff,
        ));

    }
    public function affichallactAction(){

      // affichage trier par date et nahit les actualite mte3 admin connectÃ©
        $em = $this->getDoctrine()->getManager();

        $user = $this->get('security.token_storage')->getToken()->getUser();
        $user_id = $user->getId();
        $actualitee = $em->getRepository('AppBundle:Actualite')->afficherpardate($user_id);

        return $this->render('@Back/Actualite/Afficheallactualite.html.twig', array(
            "Actualite" => $actualitee,

        ));


    }
    public function supprimeractAction($id){
        $em=$this->getDoctrine()->getManager();
        $actualite=$em->getRepository(Actualite::class)->find($id);
        $em->remove($actualite);
        $em->flush();
        return $this->redirectToRoute('afficheradminactualite');

    }
    public function modifieractAction($id,Request $request)
    {

            $em = $this->getDoctrine()->getManager();
            $actualitee = $em->getRepository(Actualite::class)->find($id);
            $form = $this->createForm(ActualiteType::class, $actualitee);
            $form = $form->handleRequest($request);
            if ($form->isValid() && $form->isSubmitted()) {
                $em = $this->getDoctrine()->getManager();

                $file = $actualitee->getPictures();
                $filename= md5(uniqid()) . '.' . $file->guessExtension();
                $file->move($this->getParameter('photos_directory'), $filename);
                $actualitee->setPictures($filename);



                $em->flush();

                return $this->redirectToRoute('afficherallactualite');
            }


            return $this->render('@Back/Actualite/modifActualite.html.twig', array(
                'form' => $form->createView()
            ));

    }
    public function supprimercatAction($id){
        $em=$this->getDoctrine()->getManager();
        $categorie=$em->getRepository(Category::class)->find($id);
        $em->remove($categorie);
        $em->flush();
        return $this->redirectToRoute('ajoutercategorie');
    }

    public function affadminactualiteAction(Request $request){
        $em = $this->getDoctrine()->getManager();

        $user = $this->get('security.token_storage')->getToken()->getUser();
        $user_id = $user->getId();
        $actualitee = $em->getRepository('AppBundle:Actualite')->affactbyadmin($user_id);



       return $this->render('@Back/Actualite/Afficheadminactualite.html.twig', array(
            'Actualite' => $actualitee
       ));
    }
    public function consulteractAction($id,Request $request){
        $em = $this->getDoctrine()->getManager();
        $actualitee = $em->getRepository(Actualite::class)->actualitebyid($id);

        return $this->render('@Back/Actualite/ConsultActualite.html.twig',Array(
            'Actualite' => $actualitee
        ));
    }
    public function listarchiveactAction(){
        $em = $this->getDoctrine()->getManager();
        $actualitee = $em->getRepository(Actualite::class)->affichearchiveact();
        return $this->render('@Back/Actualite/listearchiveact.html.twig',Array(
            'Actualite' => $actualitee
        ));
    }
    public function archiveractAction($id){
        $em=$this->getDoctrine()->getManager();
        $actualitee=$em->getRepository(Actualite::class)->find($id);
        $actualitee->setArchivestatut(0);
        $em = $this->getDoctrine()->getManager();
        $em->flush();
        return $this->redirectToRoute('afficherallactualite');
    }
public function searchAction (Request $request){
        $em = $this ->getDoctrine()->getManager();
        $requestString = $request ->get('q');
        $actualite = $em->getRepository('AppBundle:Actualite')->findEntitiesByString($requestString);
        if(!$actualite){
            $result['actualite']['error']="Actualite non trouvÃ© !";
        }
        else {
            $result['actualite']=$this->getRealEntities($actualite);
        }
        return new Response(json_encode($result));
}
public function getRealEntities($actualite){
    foreach ($actualite as $actualite){
        $realEntities[$actualite->getId()] = [$actualite->getPictures(),$actualite->getTitre()];

    }
    return $realEntities;
}


}